# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CD with Gradle

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read
  
env:
  S3_BUCKET_NAME: thegong-bucket

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      working-directory: ./backend 

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.MAIN_CONFIG }}
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Add permission
      run: chmod +x gradlew
      working-directory: ${{ env.working-directory }}
      
    - name: Build with Gradle
      run: ./gradlew clean build --debug
      working-directory: ${{ env.working-directory }}
      
      # build한 후 프로젝트를 압축합니다.
    - name: Make zip file
      run: zip -r ./thegong-deploy.zip .
      shell: bash
    
    # Access Key와 Secret Access Key를 통해 권한을 확인합니다.
    # 아래 코드에 Access Key와 Secret Key를 직접 작성하지 않습니다.
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려옵니다.
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려옵니다.
        aws-region: ap-northeast-2
    
    # 압축한 프로젝트를 S3로 전송합니다.
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./thegong-deploy.zip s3://$S3_BUCKET_NAME/thegong-deploy.zip
  
  deploy:

    runs-on: ubuntu-latest
    needs: build
    
    steps:
    
      # CodeDeploy에게 배포 명령을 내립니다.
    - name: Code Deploy
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: >
        aws deploy create-deployment --application-name thegong
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name thegong-group
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=thegong-deploy.zip
        --region ap-northeast-2
